### YamlMime:UniversalReference
items:
  - uid: Api.Js.InPage.SxcInstance
    name: SxcInstance
    fullName: SxcInstance
    children:
      - Api.Js.InPage.SxcInstance.cbid
      - Api.Js.InPage.SxcInstance.cms
      - Api.Js.InPage.SxcInstance.data
      - Api.Js.InPage.SxcInstance.id
      - Api.Js.InPage.SxcInstance.is
      - Api.Js.InPage.SxcInstance.isEditMode
      - Api.Js.InPage.SxcInstance.log
      - Api.Js.InPage.SxcInstance.query
      - Api.Js.InPage.SxcInstance.webApi
    langs:
      - typeScript
    type: class
    summary: The typical sxc-instance object for a specific DNN module or content-block
    extends:
      name: Api.Js.InPage.HasLog
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.cbid
    name: cbid
    fullName: cbid
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      content-block ID, which is either the module ID, or the content-block
      definition entity ID

      this is an advanced concept you usually don't care about, otherwise you
      should research it
    syntax:
      content: 'public cbid: number'
      return:
        type:
          - number
        description: ''
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.cms
    name: cms
    fullName: cms
    children: []
    langs:
      - typeScript
    type: property
    summary: CMS operations on this sxc-instance.
    syntax:
      content: 'cms: SxcInstanceCms = new SxcInstanceCms(this, ''cms'')'
      return:
        type:
          - SxcInstanceCms
        description: ''
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.data
    name: data(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a data service for a specific content-type.
    syntax:
      content: 'function data<T>(contentType: string)'
      parameters:
        - id: contentType
          type:
            - string
          description: name of the content type which this service will get
      return:
        type:
          - Api.Js.InPage.SxcData<T>
        description: SxcData<T>
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: 'the sxc-instance ID, which is usually the DNN Module Id'
    syntax:
      content: 'public id: number'
      return:
        type:
          - number
        description: ''
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.is
    name: is(unknown)
    children: []
    type: method
    langs:
      - typeScript
    summary: TypeGuard for TypeScript to verify this is a SxcInstance
    syntax:
      content: 'static function is(thing: unknown)'
      parameters:
        - id: thing
          type:
            - unknown
          description: ''
      return:
        type:
          - thing
        description: ''
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.isEditMode
    name: isEditMode()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Test if the current code is in edit-mode and additional javascripts have
      been loaded to make it work
    syntax:
      content: function isEditMode()
      parameters: []
      return:
        type:
          - boolean
        description: true if we are in edit-mode
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.log
    name: log
    fullName: log
    children: []
    langs:
      - typeScript
    type: property
    summary: The logger for this object
    syntax:
      content: 'log: Log'
      return:
        type:
          - Api.Js.InPage.Log
        description: ''
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.query
    name: query(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function query(query: string)'
      parameters:
        - id: query
          type:
            - string
          description: ''
      return:
        type:
          - Api.Js.InPage.SxcQuery
        description: SxcQuery
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcInstance.webApi
    name: webApi
    fullName: webApi
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'webApi: SxcWebApi'
      return:
        type:
          - Api.Js.InPage.SxcWebApi
        description: ''
    package: Api.Js.InPage
references:
  - uid: Api.Js.InPage.HasLog
    name: HasLog
    spec.typeScript:
      - name: HasLog
        fullName: HasLog
        uid: Api.Js.InPage.HasLog
  - uid: Api.Js.InPage.Log
    name: Log
    spec.typeScript:
      - name: Log
        fullName: Log
        uid: Api.Js.InPage.Log
  - uid: Api.Js.InPage.SxcWebApi
    name: SxcWebApi
    spec.typeScript:
      - name: SxcWebApi
        fullName: SxcWebApi
        uid: Api.Js.InPage.SxcWebApi
  - uid: Api.Js.InPage.SxcData<T>
    name: SxcData<T>
    spec.typeScript:
      - name: SxcData
        fullName: SxcData
        uid: Api.Js.InPage.SxcData
      - name: <T>
        fullName: <T>
  - uid: Api.Js.InPage.SxcQuery
    name: SxcQuery
    spec.typeScript:
      - name: SxcQuery
        fullName: SxcQuery
        uid: Api.Js.InPage.SxcQuery
