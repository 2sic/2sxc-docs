### YamlMime:UniversalReference
items:
  - uid: Api.Js.SxcJs.CommandNames
    name: CommandNames
    fullName: CommandNames
    children:
      - Api.Js.SxcJs.CommandNames.add
      - Api.Js.SxcJs.CommandNames.addExisting
      - Api.Js.SxcJs.CommandNames.app
      - Api.Js.SxcJs.CommandNames.appImport
      - Api.Js.SxcJs.CommandNames.appResources
      - Api.Js.SxcJs.CommandNames.appSettings
      - Api.Js.SxcJs.CommandNames.apps
      - Api.Js.SxcJs.CommandNames.contentItems
      - Api.Js.SxcJs.CommandNames.contentType
      - Api.Js.SxcJs.CommandNames.copy
      - Api.Js.SxcJs.CommandNames.custom
      - Api.Js.SxcJs.CommandNames.delete
      - Api.Js.SxcJs.CommandNames.edit
      - Api.Js.SxcJs.CommandNames.image
      - Api.Js.SxcJs.CommandNames.insightsServer
      - Api.Js.SxcJs.CommandNames.instanceList
      - Api.Js.SxcJs.CommandNames.layout
      - Api.Js.SxcJs.CommandNames.metadata
      - Api.Js.SxcJs.CommandNames.more
      - Api.Js.SxcJs.CommandNames.moveDown
      - Api.Js.SxcJs.CommandNames.moveUp
      - Api.Js.SxcJs.CommandNames.new
      - Api.Js.SxcJs.CommandNames.newMode
      - Api.Js.SxcJs.CommandNames.publish
      - Api.Js.SxcJs.CommandNames.remove
      - Api.Js.SxcJs.CommandNames.replace
      - Api.Js.SxcJs.CommandNames.templateDevelop
      - Api.Js.SxcJs.CommandNames.templateQuery
      - Api.Js.SxcJs.CommandNames.templateSettings
      - Api.Js.SxcJs.CommandNames.zone
    langs:
      - typeScript
    type: enum
    summary: >-
      Names of commands known to 2sxc CMS - for use in toolbars and calling
      commands directly from code
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.add
    name: add
    children: []
    langs:
      - typeScript
    summary: |-
      `add` command open a `new` dialog to add a new item to a list of items
      Note that this is similar to `new` but still not the same
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.addExisting
    name: addExisting
    children: []
    langs:
      - typeScript
    summary: >-
      `add-existing` command to open a dialog allowing the user to select
      something to add to a list of items
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.app
    name: app
    children: []
    langs:
      - typeScript
    summary: '`app` will open the app-admin dialog'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.appImport
    name: appImport
    children: []
    langs:
      - typeScript
    summary: '`app-import` command will open the dialog to import an App'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.appResources
    name: appResources
    children: []
    langs:
      - typeScript
    summary: >-
      `app-resources` will open the edit for app-resources (multi-language
      texts, labels etc.). It's disabled if the app doesn't have resource-values
      to configure
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.appSettings
    name: appSettings
    children: []
    langs:
      - typeScript
    summary: >-
      `app-settings` will open the edit dialog for the app-settings. It's
      disabled if the app doesn't have setting-values to configure
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.apps
    name: apps
    children: []
    langs:
      - typeScript
    summary: '`apps` will open the manage all apps dialog'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.contentItems
    name: contentItems
    children: []
    langs:
      - typeScript
    summary: >-
      `contentitems` will open the dialog to manage content-items for the
      current template. Will use the settings of the current template to open.
       contentType (optional) - name of data-type to manage/open
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.contentType
    name: contentType
    children: []
    langs:
      - typeScript
    summary: >-
      `contenttype` will open the dialog to view or change the current
      content-type, meaning you can change what fields it has, their types etc
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.copy
    name: copy
    children: []
    langs:
      - typeScript
    summary: >
      `copy` command will open the edit-dialog for the current item in
      copy-mode, so when saving it will be a new item

      To work, it also needs `contentTypeName`

      WIP v14.02
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.custom
    name: custom
    children: []
    langs:
      - typeScript
    summary: |-
      `custom` will execute custom javascript
      customCode - some JS like "alert('hello');"
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.delete
    name: delete
    children: []
    langs:
      - typeScript
    summary: |-
      `delete` will delete (not just remove) a content-item. Needs:
      entityId
      entityGuid
      entityTitle
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.edit
    name: edit
    children: []
    langs:
      - typeScript
    summary: >-
      `edit` command will open the edit-dialog for the current item.

      In scenarios where we have a list of items and it's currently showing the
      demo, this will have the same effect as `add`
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.image
    name: image
    children: []
    langs:
      - typeScript
    summary: >-
      `image` command will open the edit-dialog for the metadata of the current
      image
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.insightsServer
    name: insightsServer
    children: []
    langs:
      - typeScript
    summary: '`insights-server` command will open the insights logs page'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.instanceList
    name: instanceList
    children: []
    langs:
      - typeScript
    summary: >-
      `instance-list` command will open a dialog to manually re-order items in a
      list. (note: in older versions was called "sort"
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.layout
    name: layout
    children: []
    langs:
      - typeScript
    summary: >-
      `layout` command will open the in-page dialog to change the layout of the
      current content.

      [no parameters needed]
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.metadata
    name: metadata
    children: []
    langs:
      - typeScript
    summary: '`metadata` command will open the edit-dialog for the current metadata item'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.more
    name: more
    children: []
    langs:
      - typeScript
    summary: >-
      `more` command create a "â€¦" button which flips through the menu-buttons of
      toolbars
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.moveDown
    name: moveDown
    children: []
    langs:
      - typeScript
    summary: |-
      `movedown` command moves a content-item down one position in the list
      useModuleList: true (required to be true for it to work)
      sortOrder: [number] (important so it knows the position)
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.moveUp
    name: moveUp
    children: []
    langs:
      - typeScript
    summary: |-
      `moveup` command moves a content-item up one position in the list
      useModuleList: true (required to be true for it to work)
      sortOrder: [number] (important so it knows the position)
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.new
    name: new
    children: []
    langs:
      - typeScript
    summary: |
      `new` command opens the edit-dialog for a new content-item.
      contentType
      Then it needs either the ID...:
      entityId

      ...or it needs the position within the list:
      useModuleList: true
      sortOrder: [number] (important so it knows the position
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.newMode
    name: newMode
    children: []
    langs:
      - typeScript
    summary: '`new` command sets new mode used in parameters'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.publish
    name: publish
    children: []
    langs:
      - typeScript
    summary: >-
      `publish` command tells the system to update a content-items status to
      published. If there was a published and a draft before, the draft will
      replace the previous item
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.remove
    name: remove
    children: []
    langs:
      - typeScript
    summary: |-
      `remove` command removes an item from a list of items.
      useModuleList: true (required to be true for it to work)
      sortOrder: [number] (important so it knows the position)
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.replace
    name: replace
    children: []
    langs:
      - typeScript
    summary: >-
      `replace` command will open the dialog to assign a different content-item
      in this slot on module-assigned content items
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.templateDevelop
    name: templateDevelop
    children: []
    langs:
      - typeScript
    summary: >-
      `template-develop` will open the template-editor dialog in a new window.
      (note: in older versions was called "develop")
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.templateQuery
    name: templateQuery
    children: []
    langs:
      - typeScript
    summary: >-
      `template-query` will open the pipeline/query-designer in a new window.
      It's invisible on content, and disabled if no pipeline is configured
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.templateSettings
    name: templateSettings
    children: []
    langs:
      - typeScript
    summary: '`template-settings` will change settings on the template currently used'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandNames.zone
    name: zone
    children: []
    langs:
      - typeScript
    summary: '`zone` will open the manage all apps dialog'
    type: field
    numericValue: null
    package: Api.Js.SxcJs
