{
	"id": 0,
	"name": "Api.Js.SxcJs",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 515,
			"name": "\"index-docs\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Projects/2sxc/2sxc-ui/projects/sxc-typings/index-docs.ts",
			"children": [
				{
					"id": 516,
					"name": "__global",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"comment": {
						"shortText": "Make sure the code knows that $2sxc exists on window"
					},
					"children": [
						{
							"id": 517,
							"name": "Window",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 518,
									"name": "$2sxc",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The global $2sxc object / function to generate Sxc instances"
									},
									"sources": [
										{
											"fileName": "index-docs.ts",
											"line": 18,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "SxcGlobal",
										"id": 246
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										518
									]
								}
							],
							"sources": [
								{
									"fileName": "index-docs.ts",
									"line": 14,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								517
							]
						}
					],
					"sources": [
						{
							"fileName": "index-docs.ts",
							"line": 13,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						516
					]
				}
			],
			"sources": [
				{
					"fileName": "index-docs.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"index-public-part\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Projects/2sxc/2sxc-ui/projects/sxc-typings/index-public-part.ts",
			"children": [
				{
					"id": 41,
					"name": "CommandNames",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Names of commands known to 2sxc CMS - for use in toolbars and calling commands directly from code"
					},
					"children": [
						{
							"id": 42,
							"name": "add",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`add` adds another demo-item to a **list of items**.\nIt does not open the edit-dialog.\n<br> The new item is placed after the item the (+) was clicked on.\n<br>💡\nThis is different than new, which opens a dialog to add something.\n<br> 🪜 Only appears on toolbars of items which are in a list.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandAddParams)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 233,
									"character": 7
								}
							],
							"defaultValue": "\"add\""
						},
						{
							"id": 43,
							"name": "addExisting",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`add-existing` opens a dialog allowing the user to select an existing item to add to a **list of items**.\n<br> The new item is placed after the item the (+) was clicked on.\n<br> 🪜 Only appears on toolbars of items which are in a list.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandAddExistingParams)\n<br> 🆕 in v11.01"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 241,
									"character": 15
								}
							],
							"defaultValue": "\"add-existing\""
						},
						{
							"id": 44,
							"name": "app",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`app` opens the app-admin dialog\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 248,
									"character": 7
								}
							],
							"defaultValue": "\"app\""
						},
						{
							"id": 45,
							"name": "appImport",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`app-import` opens the dialog to import an App.\n<br> 🔘 This is not available on the toolbar.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 255,
									"character": 13
								}
							],
							"defaultValue": "\"app-import\""
						},
						{
							"id": 46,
							"name": "appResources",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`app-resources` opens the edit dialog for app-resources (multi-language texts, labels etc.).\n<br> 🔘 It's disabled on the toolbar if the app doesn't have resource-values to configure.\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 263,
									"character": 16
								}
							],
							"defaultValue": "\"app-resources\""
						},
						{
							"id": 47,
							"name": "appSettings",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`app-settings` opens the edit dialog for the app-settings.\n<br> 🔘 It's disabled on the toolbar if the app doesn't have setting-values to configure\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 271,
									"character": 15
								}
							],
							"defaultValue": "\"app-settings\""
						},
						{
							"id": 48,
							"name": "apps",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`apps` opens the manage all apps dialog.\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected based on toolbar)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 278,
									"character": 8
								}
							],
							"defaultValue": "\"apps\""
						},
						{
							"id": 49,
							"name": "contentItems",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`contentitems` opens the list to manage all items of a specific content-type.\n<br> 🔘 Will use the settings of the current template to open.\nIt is only shown to elevated admins.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandContentItemsParams)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 285,
									"character": 16
								}
							],
							"defaultValue": "\"contentitems\""
						},
						{
							"id": 50,
							"name": "contentType",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`contenttype` opens the dialog to view or modify fields of a content-type.\n<br> 🔘 On a toolbar it will use the content-type of the current item.\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandContentTypeParams)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 292,
									"character": 15
								}
							],
							"defaultValue": "\"contenttype\""
						},
						{
							"id": 51,
							"name": "copy",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`copy` opens the edit-dialog for the current item in copy-mode, so when saving it will be a new item.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandCopyParams)\n<br> 🆕 in v14.03"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 298,
									"character": 8
								}
							],
							"defaultValue": "\"copy\""
						},
						{
							"id": 52,
							"name": "custom",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`custom` will execute custom javascript.\n<br> 🔘 This is mainly for toolbars, to add buttons with custom code.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandCustomParams)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 304,
									"character": 10
								}
							],
							"defaultValue": "\"custom\""
						},
						{
							"id": 53,
							"name": "delete",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`delete` will delete (not just remove) a content-item.\n<br> 💡 This is similar to `remove` but really deletes the data from the DB.\n<br> 🔘 It only appears if the toolbar explicitly asks for it.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandDeleteParams)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 312,
									"character": 10
								}
							],
							"defaultValue": "\"delete\""
						},
						{
							"id": 54,
							"name": "edit",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`edit` opens an edit-dialog.\n<br>\nIn scenarios where the page is currently showing a demo item, this will have the same effect as `add`\n<br> 🔘 Only appears if `entityId` is known or item is in a list.\n<br> 📩 Parameters either one of these:\n[Id](xref:Api.Js.SxcJs.CommandParamsEntityById),\n[In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock),\n[In List](xref:Api.Js.SxcJs.CommandParamsEntityInList)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 324,
									"character": 8
								}
							],
							"defaultValue": "\"edit\""
						},
						{
							"id": 55,
							"name": "insightsServer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`insights-server` opens the insights logs page\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 331,
									"character": 18
								}
							],
							"defaultValue": "\"insights-server\""
						},
						{
							"id": 56,
							"name": "instanceList",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`instance-list` opens a dialog to manually re-order **items in a list**.\n<br> 🪜 Only appears on toolbars of items which are in a list.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 338,
									"character": 16
								}
							],
							"defaultValue": "\"instance-list\""
						},
						{
							"id": 57,
							"name": "layout",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`layout` opens the in-page dialog to change the layout of the current content.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 344,
									"character": 10
								}
							],
							"defaultValue": "\"layout\""
						},
						{
							"id": 58,
							"name": "metadata",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`metadata` opens the edit-dialog for the current metadata item.\n<br> 🔘 It only appears if the toolbar explicitly asks for it.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandMetadataParams)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 350,
									"character": 12
								}
							],
							"defaultValue": "\"metadata\""
						},
						{
							"id": 59,
							"name": "more",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`more` create a \"…\" (ellipsis) button which flips through the button groups of toolbars\n<br> 🔘 It only appears if the toolbar has `more`=`auto` and has multiple groups.\n<br> 📩 No params required,\n(auto-detected based on toolbar)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 357,
									"character": 8
								}
							],
							"defaultValue": "\"more\""
						},
						{
							"id": 60,
							"name": "moveDown",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`movedown` moves a content-item down one position in a **list of items**.\n<br> 🪜 Only appears on toolbars of items which are in a list.\n<br> 📩 Parameters either one of these:\n[In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock),\n[In List](xref:Api.Js.SxcJs.CommandParamsEntityInList)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 366,
									"character": 12
								}
							],
							"defaultValue": "\"movedown\""
						},
						{
							"id": 61,
							"name": "moveUp",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`moveup` moves a content-item up one position in a **list of items**.\n<br> 🪜 Only appears on toolbars of items which are in a list.\n<br> 📩 Parameters either one of these:\n[In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock),\n[In List](xref:Api.Js.SxcJs.CommandParamsEntityInList)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 375,
									"character": 10
								}
							],
							"defaultValue": "\"moveup\""
						},
						{
							"id": 62,
							"name": "new",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`new` opens the edit-dialog to create a new item/entity.\n<br>\nIf the previous item is in a list, it will add it to that list _after_ the previous item with the toolbar.\nOtherwise it just creates it and the visualization will differ depending on the App.\n<br> 🪜 It works differently for lists - in which case it also adds it to the list.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandNewParams)\n(usually auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 385,
									"character": 7
								}
							],
							"defaultValue": "\"new\""
						},
						{
							"id": 63,
							"name": "publish",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`publish` tells the system to update a content-items status to published. If there was a published and a draft before, the draft will replace the previous item\n<br> 🔘 Appears automatically if the item is in draft mode / not published.\n<br> 📩 Parameters either one of these:\n[Id](xref:Api.Js.SxcJs.CommandParamsEntityById),\n[In Block](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock),\n[In List](xref:Api.Js.SxcJs.CommandParamsEntityInList)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 396,
									"character": 11
								}
							],
							"defaultValue": "\"publish\""
						},
						{
							"id": 64,
							"name": "remove",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`remove` removes an item from a list of items.\n<br> 🪜 Only appears on toolbars of items which are in a list.\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandParamsEntityInList)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 403,
									"character": 10
								}
							],
							"defaultValue": "\"remove\""
						},
						{
							"id": 65,
							"name": "replace",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`replace` opens the dialog to assign a different content-item in this slot on module-assigned content items\n<br> 📩 [Parameters](xref:Api.Js.SxcJs.CommandParamsEntityInList)\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 409,
									"character": 11
								}
							],
							"defaultValue": "\"replace\""
						},
						{
							"id": 66,
							"name": "templateDevelop",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`template-develop` opens the template-editor dialog in a new window.\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 416,
									"character": 19
								}
							],
							"defaultValue": "\"template-develop\""
						},
						{
							"id": 67,
							"name": "templateQuery",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`template-query` opens the pipeline/query-designer in a new window.\n<br> 🔘 It's not available on the simple Content App, only on full Apps.\nIt is disabled if no query is configured.\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 425,
									"character": 17
								}
							],
							"defaultValue": "\"template-query\""
						},
						{
							"id": 68,
							"name": "templateSettings",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`template-settings` will change settings on the template currently used\n<br> 🔐 Toolbar shows this automatically to elevated admins."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 430,
									"character": 20
								}
							],
							"defaultValue": "\"template-settings\""
						},
						{
							"id": 69,
							"name": "zone",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`zone` opens the system dialog for this zone/site.\n<br> 🔐 Toolbar shows this automatically to elevated admins.\n<br> 📩 No params required,\n(auto-detected from context)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 437,
									"character": 8
								}
							],
							"defaultValue": "\"zone\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								42,
								43,
								44,
								45,
								46,
								47,
								48,
								49,
								50,
								51,
								52,
								53,
								54,
								55,
								56,
								57,
								58,
								59,
								60,
								61,
								62,
								63,
								64,
								65,
								66,
								67,
								68,
								69
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 223,
							"character": 32
						}
					]
				},
				{
					"id": 150,
					"name": "MetadataTargetTypes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Metadata Target Types",
						"text": "These are constants to determine what something is assigned to (e.g. it describes an Entity, a file, etc.)\n\nUse it for the @see MetadataFor objects"
					},
					"children": [
						{
							"id": 154,
							"name": "App",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "App metadata (3). Used to give Apps additional properties.\nRemarks =\nThe key should always be an int ID of the App."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 928,
									"character": 7
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 153,
							"name": "Attribute",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Metadata of attributes / fields (2). This is used to store configuration like the field label, amount-of-rows, etc.\nRemarks =\nThe key is always a number (int) pointing to the Attribute ID in the DB."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 922,
									"character": 13
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 158,
							"name": "CmsItem",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Item / Object of the Platform, like a File or Folder etc. (10)\nRemarks =\n* The key is usually a string to further specify what it's describing, like \"file:72\"\n* The text equivalent is CmsObject"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 951,
									"character": 11
								}
							],
							"defaultValue": "10"
						},
						{
							"id": 156,
							"name": "ContentType",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Metadata of a content-type / data-schema (5). Used to give it a description etc."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 939,
									"character": 15
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 167,
							"name": "Custom",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (90). This is what you should use for basic apps which have a custom target that's none of the other defaults."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 995,
									"character": 10
								}
							],
							"defaultValue": "90"
						},
						{
							"id": 168,
							"name": "Custom1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (91). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 997,
									"character": 11
								}
							],
							"defaultValue": "91"
						},
						{
							"id": 169,
							"name": "Custom2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (92). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 999,
									"character": 11
								}
							],
							"defaultValue": "92"
						},
						{
							"id": 170,
							"name": "Custom3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (93). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1001,
									"character": 11
								}
							],
							"defaultValue": "93"
						},
						{
							"id": 171,
							"name": "Custom4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (94). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1003,
									"character": 11
								}
							],
							"defaultValue": "94"
						},
						{
							"id": 172,
							"name": "Custom5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (95). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1005,
									"character": 11
								}
							],
							"defaultValue": "95"
						},
						{
							"id": 173,
							"name": "Custom6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (96). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1007,
									"character": 11
								}
							],
							"defaultValue": "96"
						},
						{
							"id": 174,
							"name": "Custom7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (97). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1009,
									"character": 11
								}
							],
							"defaultValue": "97"
						},
						{
							"id": 175,
							"name": "Custom8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (98). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1011,
									"character": 11
								}
							],
							"defaultValue": "98"
						},
						{
							"id": 176,
							"name": "Custom9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom target (99). Use this for basic apps which need multiple different custom targets (advanced, rare use case)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1013,
									"character": 11
								}
							],
							"defaultValue": "99"
						},
						{
							"id": 155,
							"name": "Entity",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Metadata of entities / data-items (4).\nThis lets us enhance entities with additional information.\nRemarks =\nThe Key should always be a GUID"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 935,
									"character": 10
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 164,
							"name": "Module",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Module - like a module containing some content (16)\nRemarks = New in v13</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 983,
									"character": 10
								}
							],
							"defaultValue": "16"
						},
						{
							"id": 165,
							"name": "ModuleVariant",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Module - like a module containing some content (17)\nRemarks = New in v13 / beta</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 988,
									"character": 17
								}
							],
							"defaultValue": "17"
						},
						{
							"id": 152,
							"name": "None",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Things that are not used as Metadata (1). This is the default for most Entities."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 916,
									"character": 8
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 162,
							"name": "Page",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Page - like the current page (14)\nRemarks = New in v13</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 973,
									"character": 8
								}
							],
							"defaultValue": "14"
						},
						{
							"id": 163,
							"name": "PageVariant",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Page - like the current page (15)\nRemarks = New in v13 / beta</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 978,
									"character": 15
								}
							],
							"defaultValue": "15"
						},
						{
							"id": 160,
							"name": "Site",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Site - like the current site (12)\nRemarks = New in v13</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 963,
									"character": 8
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 161,
							"name": "SiteVariant",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Site - like the current site (13)\nRemarks = New in v13 / beta</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 968,
									"character": 15
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 159,
							"name": "System",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The entire system / platform - so Metadata for the current Dnn/Oqtane installation (11).\nRemarks =\nThis is not in use as of now, just added for completeness sakes.\nNew in v13"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 958,
									"character": 10
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 151,
							"name": "Undefined",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Undefined Type (0) - included for completeness.\nNot usually used, actually None (1) is the default"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 912,
									"character": 13
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 166,
							"name": "User",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A User - like the admin-user (18)\nRemarks = New in v13</remarks>"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 993,
									"character": 8
								}
							],
							"defaultValue": "18"
						},
						{
							"id": 157,
							"name": "Zone",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Zone metadata (6) - used to give a Zone additional information.\nOnly used in very special cases, best not use."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 944,
									"character": 8
								}
							],
							"defaultValue": "6"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								154,
								153,
								158,
								156,
								167,
								168,
								169,
								170,
								171,
								172,
								173,
								174,
								175,
								176,
								155,
								164,
								165,
								152,
								162,
								163,
								160,
								161,
								159,
								151,
								166,
								157
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 907,
							"character": 39
						}
					]
				},
				{
					"id": 443,
					"name": "WorkflowPhases",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Phases / events of a specific workflow."
					},
					"children": [
						{
							"id": 446,
							"name": "after",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Run after a specific event / command"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1872,
									"character": 9
								}
							],
							"defaultValue": "\"after\""
						},
						{
							"id": 444,
							"name": "all",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Run at every phase - before and after events/commands"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1864,
									"character": 7
								}
							],
							"defaultValue": "\"all\""
						},
						{
							"id": 445,
							"name": "before",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Run before a specific event / command"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1868,
									"character": 10
								}
							],
							"defaultValue": "\"before\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								446,
								444,
								445
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1860,
							"character": 34
						}
					]
				},
				{
					"id": 97,
					"name": "ContextBundleContent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true
					},
					"comment": {},
					"children": [
						{
							"id": 99,
							"name": "_isContext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 617,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContextBundleInstance._isContext",
								"id": 102
							}
						},
						{
							"id": 98,
							"name": "sxc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "instance of sxc object",
								"tags": [
									{
										"tag": "type",
										"text": "{Sxc}"
									},
									{
										"tag": "memberof",
										"text": "ContextBundleInstance\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 609,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Sxc",
								"id": 202
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContextBundleInstance.sxc",
								"id": 101
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								99,
								98
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 593,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContextBundleInstance",
							"id": 100
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ContextBundleToolbar",
							"id": 103
						}
					]
				},
				{
					"id": 100,
					"name": "ContextBundleInstance",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true
					},
					"comment": {},
					"children": [
						{
							"id": 102,
							"name": "_isContext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 617,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 101,
							"name": "sxc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "instance of sxc object",
								"tags": [
									{
										"tag": "type",
										"text": "{Sxc}"
									},
									{
										"tag": "memberof",
										"text": "ContextBundleInstance\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 609,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Sxc",
								"id": 202
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								102,
								101
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 603,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ContextBundleContent",
							"id": 97
						}
					]
				},
				{
					"id": 103,
					"name": "ContextBundleToolbar",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true
					},
					"comment": {},
					"children": [
						{
							"id": 105,
							"name": "_isContext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 617,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContextBundleInstance._isContext",
								"id": 102
							}
						},
						{
							"id": 104,
							"name": "sxc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "instance of sxc object",
								"tags": [
									{
										"tag": "type",
										"text": "{Sxc}"
									},
									{
										"tag": "memberof",
										"text": "ContextBundleInstance\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 609,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Sxc",
								"id": 202
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContextBundleInstance.sxc",
								"id": 101
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								104
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 625,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContextBundleContent",
							"id": 97
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ContextComplete",
							"id": 106
						}
					]
				},
				{
					"id": 106,
					"name": "ContextComplete",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true
					},
					"comment": {},
					"children": [
						{
							"id": 111,
							"name": "_isContext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 617,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContextBundleInstance._isContext",
								"id": 102
							}
						},
						{
							"id": 110,
							"name": "sxc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "instance of sxc object",
								"tags": [
									{
										"tag": "type",
										"text": "{Sxc}"
									},
									{
										"tag": "memberof",
										"text": "ContextBundleInstance\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 609,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Sxc",
								"id": 202
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContextBundleInstance.sxc",
								"id": 101
							}
						},
						{
							"id": 107,
							"name": "is",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"signatures": [
								{
									"id": 108,
									"name": "is",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 109,
											"name": "thing",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "thing",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"name": "ContextComplete"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 642,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								111,
								110
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								107
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 634,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContextBundleToolbar",
							"id": 103
						}
					]
				},
				{
					"id": 112,
					"name": "ContextIdentifier",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "ContextIdentifier is used to initialize a Sxc object outside of the default context."
					},
					"children": [
						{
							"id": 114,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "AppId of this Context",
								"tags": [
									{
										"tag": "requires",
										"text": "appId\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 659,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 116,
							"name": "moduleId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "ModuleId of this Context (optional)",
								"tags": [
									{
										"tag": "optional",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 669,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 115,
							"name": "pageId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "PageId of this Context (optional)",
								"tags": [
									{
										"tag": "optional",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 664,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 113,
							"name": "zoneId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "ZoneId of this Context",
								"tags": [
									{
										"tag": "requires",
										"text": "zoneId\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 654,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								114,
								116,
								115,
								113
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 649,
							"character": 38
						}
					]
				},
				{
					"id": 125,
					"name": "HasLog",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Any object that has an own log object",
						"tags": [
							{
								"tag": "export",
								"text": ""
							},
							{
								"tag": "interface",
								"text": "HasLog"
							}
						]
					},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 727,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Sxc",
							"id": 202
						},
						{
							"type": "reference",
							"name": "SxcGlobalCms",
							"id": 275
						},
						{
							"type": "reference",
							"name": "SxcGlobalEnvironment",
							"id": 296
						},
						{
							"type": "reference",
							"name": "SxcGlobalHttp",
							"id": 313
						},
						{
							"type": "reference",
							"name": "ToolbarWorkflowManager",
							"id": 425
						}
					]
				},
				{
					"id": 126,
					"name": "InsightsLogSet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 129,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 130,
									"name": "new InsightsLogSet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 131,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InsightsLogSet",
										"id": 126
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 751,
									"character": 18
								}
							]
						},
						{
							"id": 128,
							"name": "logs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 751,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "LogList",
								"id": 507
							}
						},
						{
							"id": 127,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 750,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								128,
								127
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 749,
							"character": 28
						}
					]
				},
				{
					"id": 132,
					"name": "Log",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A log object which will collect log entries for another ojbect",
						"tags": [
							{
								"tag": "export",
								"text": ""
							},
							{
								"tag": "interface",
								"text": "Log"
							}
						]
					},
					"children": [
						{
							"id": 133,
							"name": "entries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of all entries added to this log"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 781,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "LogEntry",
									"id": 142
								}
							}
						},
						{
							"id": 134,
							"name": "maxEntries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum amount of entries to add - to prevent memory hoging"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 788,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 141,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The name of this log, for scenarios where multiple loggers are mixed"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 827,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 135,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 136,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a simple message to the log",
										"tags": [
											{
												"tag": "memberof",
												"text": "Log\n\npreferred usage is with string parameter:\nlog.add(`description ${ parameter }`);\n\nin case that we experience error with normal string parameter, we can use arrow function to enclose parameter like this () => parameter\nbut use it very rarely, because there is certainly a performance implication!\nlog.add(`description ${() => parameter}`);\n"
											}
										]
									},
									"parameters": [
										{
											"id": 137,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 138,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 139,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "index-public-part.ts",
																	"line": 809,
																	"character": 16
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 140,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 809,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								133,
								134,
								141
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								135
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 777,
							"character": 24
						}
					]
				},
				{
					"id": 142,
					"name": "LogEntry",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A log entry item",
						"tags": [
							{
								"tag": "export",
								"text": ""
							},
							{
								"tag": "interface",
								"text": "LogEntry"
							}
						]
					},
					"children": [
						{
							"id": 143,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 843,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 144,
							"name": "time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A timestamp for this entry to better see sequences of things happening"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 846,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								143,
								144
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 841,
							"character": 29
						}
					]
				},
				{
					"id": 177,
					"name": "QuickEditConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Quick Edit Configuration which has an `enable` and specific button configurations"
					},
					"children": [
						{
							"id": 179,
							"name": "buttons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional detailed configuration of the buttons."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1066,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "QuickEditConfigButtons",
								"id": 180
							}
						},
						{
							"id": 178,
							"name": "enable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determine whether this section is enabled."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1062,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "auto"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								179,
								178
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1058,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "QuickEditConfigRoot",
							"id": 187
						}
					]
				},
				{
					"id": 180,
					"name": "QuickEditConfigButtons",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Buttons on a quick-edit toolbar"
					},
					"children": [
						{
							"id": 182,
							"name": "addApp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable the button to \"add App\""
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1081,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 181,
							"name": "addContent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable the button to \"Add Content\""
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1077,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 185,
							"name": "delete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable the button \"Delete\""
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1093,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 186,
							"name": "move",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable the button \"Move\""
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1097,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 184,
							"name": "paste",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable the button \"Paste\""
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1089,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 183,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable the button \"Select\""
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1085,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								182,
								181,
								185,
								186,
								184,
								183
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1073,
							"character": 43
						}
					]
				},
				{
					"id": 187,
					"name": "QuickEditConfigRoot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Quick Edit - Full configuration at root, with `enable` and rules for `modules` and `innerBlocks`"
					},
					"children": [
						{
							"id": 188,
							"name": "buttons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The buttons configuration on the root.\nWill be used for the `modules` and `innerBlocks` if not specified there.\nNote that if not specified, will always default to true for all buttons."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1112,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "QuickEditConfigButtons",
								"id": 180
							},
							"overwrites": {
								"type": "reference",
								"name": "QuickEditConfig.buttons",
								"id": 179
							}
						},
						{
							"id": 191,
							"name": "enable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determine whether this section is enabled."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1062,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "auto"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "QuickEditConfig.enable",
								"id": 178
							}
						},
						{
							"id": 189,
							"name": "innerBlocks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional configuration for the Inner Content Blocks."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1116,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "QuickEditConfig",
								"id": 177
							}
						},
						{
							"id": 190,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional configuration for the Modules."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1120,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "QuickEditConfig",
								"id": 177
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188,
								191,
								189,
								190
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1106,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "QuickEditConfig",
							"id": 177
						}
					]
				},
				{
					"id": 202,
					"name": "Sxc",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "The typical sxc-instance object for a specific DNN module or content-block"
					},
					"children": [
						{
							"id": 204,
							"name": "cbid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "content-block ID, which is either the module ID, or the content-block definition entity ID\nthis is an advanced concept you usually don't care about, otherwise you should research it"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1195,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 206,
							"name": "cms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CMS operations on this sxc-instance, such as opening the edit dialog etc."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1212,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "SxcCms",
								"id": 216
							}
						},
						{
							"id": 203,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the sxc-instance ID, which is usually the DNN Module Id"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1190,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 205,
							"name": "webApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Web API calls for this instance.\nThis is the pure call APIs system.\nTo get data or queries, best use the data or query services.",
								"tags": [
									{
										"tag": "type",
										"text": "{SxcWebApi}"
									},
									{
										"tag": "memberof",
										"text": "Sxc\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1207,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "SxcWebApi",
								"id": 375
							}
						},
						{
							"id": 207,
							"name": "data",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 208,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a data service for a specific content-type.",
										"returns": "SxcData<T>",
										"tags": [
											{
												"tag": "memberof",
												"text": "SxcInstance\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 209,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 210,
											"name": "contentType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "name of the content type which this service will get"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SxcData",
										"id": 221,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1222,
									"character": 8
								}
							]
						},
						{
							"id": 214,
							"name": "isEditMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 215,
									"name": "isEditMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the current code is in edit-mode and additional javascripts have been loaded to make it work",
										"returns": "true if we are in edit-mode\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1236,
									"character": 14
								}
							]
						},
						{
							"id": 211,
							"name": "query",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 212,
									"name": "query",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "SxcQuery",
										"tags": [
											{
												"tag": "memberof",
												"text": "SxcInstance\n"
											}
										]
									},
									"parameters": [
										{
											"id": 213,
											"name": "query",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SxcQuery",
										"id": 337
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1229,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								204,
								206,
								203,
								205
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								207,
								214,
								211
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1188,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "HasLog",
							"id": 125
						}
					]
				},
				{
					"id": 216,
					"name": "SxcCms",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "This is in charge of sxc.cms on the instance level.\nATM it just has the run command.\nIn future, it may also have dedicated command like `layout` etc."
					},
					"children": [
						{
							"id": 217,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 218,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Run a command on this sxc-instance.\nRequires edit mode to be on, which would enable the edit-JS parts.\nTo use, remember to activate `2sxc.JsCms` on the page"
									},
									"typeParameter": [
										{
											"id": 219,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 220,
											"name": "runParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "real type is actually RunParams\n"
											},
											"type": {
												"type": "reference",
												"name": "RunParams",
												"id": 192
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1256,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								217
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1248,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SxcPart",
							"id": 336
						}
					]
				},
				{
					"id": 221,
					"name": "SxcData",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Data Service for an App / Sxc-Instance to get/create data of a specific Content-Type"
					},
					"typeParameter": [
						{
							"id": 222,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 223,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1266,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "SxcDataServiceBase.name",
								"id": 245
							}
						},
						{
							"id": 229,
							"name": "create",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 230,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new entity with the values supplied"
									},
									"parameters": [
										{
											"id": 231,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a simple object containing the values to create\n"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										]
									}
								},
								{
									"id": 232,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new entity with the values supplied and also a metadata-for reference"
									},
									"parameters": [
										{
											"id": 233,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a simple object containing the values to create\n"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										},
										{
											"id": 234,
											"name": "metadataFor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "MetadataFor",
														"id": 145
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1282,
									"character": 10
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1287,
									"character": 10
								}
							]
						},
						{
							"id": 239,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 240,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete an entity"
									},
									"parameters": [
										{
											"id": 241,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "id of the item to delete\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								},
								{
									"id": 242,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete an entity"
									},
									"parameters": [
										{
											"id": 243,
											"name": "guid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "GUID of the item to delete\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1296,
									"character": 10
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1301,
									"character": 10
								}
							]
						},
						{
							"id": 224,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 225,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all items of this type."
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1271,
									"character": 10
								}
							]
						},
						{
							"id": 226,
							"name": "getOne",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 227,
									"name": "getOne",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the specific item with the ID. It will return null if not found"
									},
									"parameters": [
										{
											"id": 228,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1275,
									"character": 10
								}
							]
						},
						{
							"id": 235,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 236,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an existing entity with the values supplied"
									},
									"parameters": [
										{
											"id": 237,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 238,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1291,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								223
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								229,
								239,
								224,
								226,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1265,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SxcDataServiceBase",
							"id": 244
						}
					]
				},
				{
					"id": 244,
					"name": "SxcDataServiceBase",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Base class doing common checks.\nThis is internal and not important, but we can't keep it out of the docs."
					},
					"children": [
						{
							"id": 245,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1310,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								245
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1309,
							"character": 48
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SxcPart",
							"id": 336
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "SxcData",
							"id": 221
						},
						{
							"type": "reference",
							"name": "SxcQuery",
							"id": 337
						}
					]
				},
				{
					"id": 275,
					"name": "SxcGlobalCms",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Global Content-Management System on the $2sxc.cms.",
						"text": "It is only available if the page is in edit mode / the page feature `2sxc.JsCms` has been activated."
					},
					"children": [
						{
							"id": 276,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 277,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Run a command within a specific context - mostly for internal use.",
										"returns": "A promise which triggers when the command has completed.\n"
									},
									"typeParameter": [
										{
											"id": 278,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 279,
											"name": "runParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The complete run params with a context"
											},
											"type": {
												"type": "reference",
												"name": "RunParamsWithContext",
												"id": 196
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										]
									}
								},
								{
									"id": 280,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Run a command within a specific context.",
										"returns": "A promise which triggers when the command has completed.\n"
									},
									"typeParameter": [
										{
											"id": 281,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 282,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The context providing tag - an HTML tag inside a module/content-block"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 283,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "command-name (action)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 284,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional mouse-event which allows the command to do some optimizations for that case - like a mouse-click"
											},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										]
									}
								},
								{
									"id": 285,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Run a command within a specific context.",
										"returns": "A promise which triggers when the command has completed.\n"
									},
									"typeParameter": [
										{
											"id": 286,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 287,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The context providing tag - an HTML tag inside a module/content-block"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 288,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "command-name (action)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 289,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an object containing the the command-params"
											},
											"type": {
												"type": "reference",
												"name": "CommandParams",
												"id": 75
											}
										},
										{
											"id": 290,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional mouse-event which allows the command to do some optimizations for that case - like a mouse-click"
											},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										]
									}
								},
								{
									"id": 291,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Run a command within a specific context.",
										"returns": "A promise which triggers when the command has completed.\n"
									},
									"typeParameter": [
										{
											"id": 292,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 293,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The context providing tag - an HTML tag inside a module/content-block"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 294,
											"name": "commandParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an object containing the the command-params as well as the command-name (action)"
											},
											"type": {
												"type": "reference",
												"name": "CommandParams",
												"id": 75
											}
										},
										{
											"id": 295,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional mouse-event which allows the command to do some optimizations for that case - like a mouse-click"
											},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1429,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1437,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1446,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1454,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								276
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1420,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "HasLog",
							"id": 125
						}
					]
				},
				{
					"id": 296,
					"name": "SxcGlobalEnvironment",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Provides environment information to $2sxc - usually page-id, api-root and stuff like that"
					},
					"children": [
						{
							"id": 297,
							"name": "ready",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Flag to determine if the environment information is available."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1470,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 298,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Where the environment information came from."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1474,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 303,
							"name": "api",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 304,
									"name": "api",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The API endpoint url from the environment"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1489,
									"character": 7
								}
							]
						},
						{
							"id": 299,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 300,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Manually load a new EnvironmentSpecs in cases where the page cannot provide them.\nThis is only used in scenarios outside of Dnn / Oqtane, you will usually not need this."
									},
									"parameters": [
										{
											"id": 301,
											"name": "envSpecs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "new info to load"
											},
											"type": {
												"type": "reference",
												"name": "EnvironmentSpecs",
												"id": 117
											}
										},
										{
											"id": 302,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "_optional_ name where the data came from\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1483,
									"character": 8
								}
							]
						},
						{
							"id": 305,
							"name": "page",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 306,
									"name": "page",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The current page ID - often needed in API calls"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1494,
									"character": 8
								}
							]
						},
						{
							"id": 311,
							"name": "platform",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 312,
									"name": "platform",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The platform code like 'oqt' or 'dnn' in case the JS needs to know the difference"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1507,
									"character": 12
								}
							]
						},
						{
							"id": 309,
							"name": "rvt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 310,
									"name": "rvt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The request-verification token for internal WebAPI calls"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1502,
									"character": 7
								}
							]
						},
						{
							"id": 307,
							"name": "rvtHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 308,
									"name": "rvtHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The request verification token header name for internal WebAPI calls"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1498,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								297,
								298
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								303,
								299,
								305,
								311,
								309,
								307
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1465,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "HasLog",
							"id": 125
						}
					]
				},
				{
					"id": 313,
					"name": "SxcGlobalHttp",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Global HTTP Service for information and helpers on `$2sxc.http`"
					},
					"children": [
						{
							"id": 325,
							"name": "apiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 326,
									"name": "apiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert short urls like `app/auto/api/Posts/All` to the full URL needed.\nWill ignore urls which clearly already are the full url.",
										"returns": "the converted, long url with the full endpoint\n"
									},
									"parameters": [
										{
											"id": 327,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "short URL like `app/auto/api/Posts/All`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 328,
									"name": "apiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert short urls like `app/auto/api/Posts/All` to the full URL needed.\nWill ignore urls which clearly already are the full url.",
										"returns": "the converted, long url with the full endpoint\n"
									},
									"parameters": [
										{
											"id": 329,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "short URL like `app/auto/api/Posts/All`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 330,
											"name": "endpointName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ endpoint name if accessing a different exotic endpoint"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1554,
									"character": 10
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1562,
									"character": 10
								}
							]
						},
						{
							"id": 314,
							"name": "headers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "headers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "All the headers which are needed in an ajax call.",
										"returns": "Dictionary / Record of headers\n"
									},
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 316,
									"name": "headers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "All the headers which are needed in an ajax call - within a module context.",
										"returns": "Dictionary / Record of headers\n"
									},
									"parameters": [
										{
											"id": 317,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ module ID"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 318,
									"name": "headers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "All the headers which are needed in an ajax call - within a module and content-block context.",
										"returns": "Dictionary / Record of headers\n"
									},
									"parameters": [
										{
											"id": 319,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ module ID"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 320,
											"name": "cbid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ content block ID"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 321,
									"name": "headers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "All the headers which are needed in an ajax call.\nUses a module and content-block context (but these could also be null)\nand a full context identifier for advanced operations.",
										"returns": "Dictionary / Record of headers\n"
									},
									"parameters": [
										{
											"id": 322,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ module ID"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 323,
											"name": "cbid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ content block ID"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 324,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "_optional_ context information to include in the header"
											},
											"type": {
												"type": "reference",
												"name": "ContextIdentifier",
												"id": 112
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1522,
									"character": 11
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1528,
									"character": 11
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1535,
									"character": 11
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1545,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								325,
								314
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1515,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "HasLog",
							"id": 125
						}
					]
				},
				{
					"id": 336,
					"name": "SxcPart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Base class for anything attached to an sxc-instance.\nThis is internal and not important, but we can't keep it out of the docs."
					},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1597,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "SxcCms",
							"id": 216
						},
						{
							"type": "reference",
							"name": "SxcDataServiceBase",
							"id": 244
						}
					]
				},
				{
					"id": 337,
					"name": "SxcQuery",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Instance Query Service"
					},
					"children": [
						{
							"id": 338,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1608,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "SxcDataServiceBase.name",
								"id": 245
							}
						},
						{
							"id": 339,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 340,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 341,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 342,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 343,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 344,
											"name": "urlParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 345,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 346,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 347,
											"name": "urlParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										},
										{
											"id": 348,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1610,
									"character": 10
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1611,
									"character": 10
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1612,
									"character": 10
								}
							]
						},
						{
							"id": 349,
							"name": "getStream",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 350,
									"name": "getStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get just one stream, returning an array of items in that stream",
										"returns": "containing an array of items - or empty if stream not found or nothing returned",
										"tags": [
											{
												"tag": "template",
												"text": "T"
											},
											{
												"tag": "memberof",
												"text": "SxcQuery\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 351,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 352,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										]
									}
								},
								{
									"id": 353,
									"name": "getStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 354,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 355,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 356,
											"name": "urlParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										]
									}
								},
								{
									"id": 357,
									"name": "getStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 358,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 359,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 360,
											"name": "urlParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										},
										{
											"id": 361,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1621,
									"character": 13
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1622,
									"character": 13
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1623,
									"character": 13
								}
							]
						},
						{
							"id": 362,
							"name": "getStreams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 363,
									"name": "getStreams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPublic": true
									},
									"comment": {
										"shortText": "Get a query but only the mentioned streams.\nThis will reduce the amount of data retrieved on queries that have many streams.",
										"returns": "Promise containing a object with stream-names and items in the streams.",
										"tags": [
											{
												"tag": "template",
												"text": "T The schema/interfaces of what will be returned"
											}
										]
									},
									"typeParameter": [
										{
											"id": 364,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 365,
											"name": "streams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 366,
									"name": "getStreams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPublic": true
									},
									"comment": {
										"shortText": "Get a query but only the mentioned streams.\nThis will reduce the amount of data retrieved on queries that have many streams.",
										"returns": "Promise containing a object with stream-names and items in the streams.",
										"tags": [
											{
												"tag": "template",
												"text": "T The schema/interfaces of what will be returned"
											}
										]
									},
									"typeParameter": [
										{
											"id": 367,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 368,
											"name": "streams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "name of streams to get, comma separated"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 369,
											"name": "urlParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "additional parameters for the URL, either as a string or as a object"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 370,
									"name": "getStreams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPublic": true
									},
									"comment": {
										"shortText": "Get a query but only the mentioned streams.\nThis will reduce the amount of data retrieved on queries that have many streams.",
										"returns": "Promise containing a object with stream-names and items in the streams.",
										"tags": [
											{
												"tag": "template",
												"text": "T The schema/interfaces of what will be returned"
											}
										]
									},
									"typeParameter": [
										{
											"id": 371,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 372,
											"name": "streams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "name of streams to get, comma separated"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 373,
											"name": "urlParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "additional parameters for the URL, either as a string or as a object"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										},
										{
											"id": 374,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "data to include in case of a POST call - if this is provided, it will use a post"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1631,
									"character": 14
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1641,
									"character": 14
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1652,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								338
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								339,
								349,
								362
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1607,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SxcDataServiceBase",
							"id": 244
						}
					]
				},
				{
					"id": 375,
					"name": "SxcWebApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "helper API to run ajax / REST calls to the server\nit will ensure that the headers etc. are set correctly\nand that urls are rewritten"
					},
					"children": [
						{
							"id": 388,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 389,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated** - docs in the separate interface",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 390,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 391,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 392,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 393,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ZzzSxcWebApiDeprecated.delete",
										"id": 480
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1684,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ZzzSxcWebApiDeprecated.delete",
								"id": 479
							}
						},
						{
							"id": 412,
							"name": "fetchJson",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 413,
									"name": "fetchJson",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Will retrieve data from the backend using a standard fetch and give you an object.",
										"returns": "a Promise containing any object.\n"
									},
									"typeParameter": [
										{
											"id": 414,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 415,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a full url or short-hand like `controller/method?params` `app/auto/api/controller/method?params`. Note that params would also be specified on the url."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 416,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional POST data"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													}
												]
											}
										},
										{
											"id": 417,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional method, defaults to `GET` unless it has data, in which case it defaults to `POST`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1717,
									"character": 13
								}
							]
						},
						{
							"id": 407,
							"name": "fetchRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 408,
									"name": "fetchRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Will retrieve data from the backend using a standard fetch.",
										"returns": "a Promise containing a Response object, just like a normal fetch would.\nexample: webApi.fetchRaw('Rss/Feed');\nexample: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 })); // url params\nexample: webApi.fetchRaw('Rss/Feed', { id: 47 }); // post params\nexample: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 }), { something: 'this is a test' }); // url & post params\nmaybe: webApi.fetchRaw({url: 'Rss/Feed', params: { id: 47 }})\nmaybe: webApi.fetchRaw({url: ..., params: { ...}, body: { ...}, method: 'GET' })\n"
									},
									"parameters": [
										{
											"id": 409,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a full url or short-hand like `controller/method?params` `app/auto/api/controller/method?params`. Note that params would also be specified on the url."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 410,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional POST data"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													}
												]
											}
										},
										{
											"id": 411,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional method, defaults to `GET` unless it has data, in which case it defaults to `POST`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1708,
									"character": 12
								}
							]
						},
						{
							"id": 376,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 377,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated** - docs in the separate interface",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 378,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 379,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 380,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 381,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ZzzSxcWebApiDeprecated.get",
										"id": 468
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1674,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ZzzSxcWebApiDeprecated.get",
								"id": 467
							}
						},
						{
							"id": 418,
							"name": "headers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 419,
									"name": "headers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "All the headers which are needed in an ajax call for this to work reliably.\nUse this if you need to get a list of headers in another system"
									},
									"parameters": [
										{
											"id": 420,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1722,
									"character": 11
								}
							]
						},
						{
							"id": 382,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 383,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated** - docs in the separate interface",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 384,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 385,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 386,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 387,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ZzzSxcWebApiDeprecated.post",
										"id": 474
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1679,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ZzzSxcWebApiDeprecated.post",
								"id": 473
							}
						},
						{
							"id": 394,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 395,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated** - docs in the separate interface",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 396,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 397,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 398,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 399,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ZzzSxcWebApiDeprecated.put",
										"id": 486
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1689,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ZzzSxcWebApiDeprecated.put",
								"id": 485
							}
						},
						{
							"id": 400,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 401,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated** - docs in the separate interface",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 402,
											"name": "settings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 403,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 404,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 405,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 406,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ZzzSxcWebApiDeprecated.request",
										"id": 492
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1694,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ZzzSxcWebApiDeprecated.request",
								"id": 491
							}
						},
						{
							"id": 421,
							"name": "url",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 422,
									"name": "url",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "In the cases of a short/medium url,\nit will auto-expand to have the full url as needed for an API call.\n"
									},
									"parameters": [
										{
											"id": 423,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A short, medium or long url.\nShort like `controller/method`,\nmedium like `app/auto/api/controller/method`\nlong like `https://xyz.\nIn all cases it can also have ?params etc."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 424,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional parameters as string or object, will be added to url-params."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Record",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1734,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								388,
								412,
								407,
								376,
								418,
								382,
								394,
								400,
								421
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1666,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ZzzSxcWebApiDeprecated",
							"id": 466
						}
					]
				},
				{
					"id": 425,
					"name": "ToolbarWorkflowManager",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A workflow manager _of a Toolbar_ which will run stuff before / after commands.\nWhen toolbars are created, they will add a Manager and then raise an event for in-page code to add workflow steps.\nNormally the toolbar with raise a `toolbar-init` event where you can then add steps."
					},
					"children": [
						{
							"id": 426,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 427,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register one or many [workflow-steps](xref:Api.Js.SxcJs.WorkflowStep) to the toolbar, to use if toolbar commands are executed."
									},
									"parameters": [
										{
											"id": 428,
											"name": "steps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "WorkflowStep",
														"id": 447
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "WorkflowStep",
															"id": 447
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1792,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								426
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1785,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "HasLog",
							"id": 125
						}
					]
				},
				{
					"id": 434,
					"name": "UrlParams",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Helper object to read url params.\nAvailable on `$2sxc.urlParams`"
					},
					"children": [
						{
							"id": 435,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 436,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a param from the url, no matter if it's behind ? or #\nIf not found, will return an empty string `''`",
										"tags": [
											{
												"tag": "memberof",
												"text": "QueryParams\n"
											}
										]
									},
									"parameters": [
										{
											"id": 437,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1836,
									"character": 7
								}
							]
						},
						{
							"id": 441,
							"name": "isDebug",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 442,
									"name": "isDebug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if debug is enabled in the URL",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1848,
									"character": 11
								}
							]
						},
						{
							"id": 438,
							"name": "require",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 439,
									"name": "require",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a required param from the url, no matter if it's behind ? or #\nWill throw an error if not found",
										"tags": [
											{
												"tag": "memberof",
												"text": "QueryParams\n"
											}
										]
									},
									"parameters": [
										{
											"id": 440,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1843,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								435,
								441,
								438
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1829,
							"character": 30
						}
					]
				},
				{
					"id": 456,
					"name": "WorkflowStepCodeArguments",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Arguments for [WorkflowStepCode](xref:Api.Js.SxcJs.WorkflowStepCode).\nWill be passed to your code and should also be returned by your code.\nThis also allows cancelling further execution."
					},
					"children": [
						{
							"id": 461,
							"name": "cancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If the workflow should be cancelled.\nCan be set by any workflow step.\nIf set to true, following steps / workflows will not run."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1943,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 457,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Name this workflow is running for"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1923,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 459,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Context of the current command / step being run"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1931,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ContextComplete",
								"id": 106
							}
						},
						{
							"id": 458,
							"name": "phase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The phase it's in (before, after, etc.)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1927,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "WorkflowPhases",
								"id": 443
							}
						},
						{
							"id": 460,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Result in after-phases of the workflow\nBETA - never really tested this"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1936,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								461,
								457,
								459,
								458,
								460
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1919,
							"character": 46
						}
					]
				},
				{
					"id": 2,
					"name": "CbOrMod",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Structure for constants in the selectors, to guarantee we got everything"
					},
					"children": [
						{
							"id": 4,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 66,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 70,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6,
							"name": "findAllLists",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 68,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 7,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 8,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLElement"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "index-public-part.ts",
											"line": 68,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 9,
							"name": "findClosestList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 69,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 10,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 11,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 12,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"sources": [
										{
											"fileName": "index-public-part.ts",
											"line": 69,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 3,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 65,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "selector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 67,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14,
							"name": "singleItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 71,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								13,
								6,
								9,
								3,
								5,
								14
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 64,
							"character": 25
						}
					]
				},
				{
					"id": 15,
					"name": "CommandAddExistingParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `add-existing`.\n<br>\nThe contentType name determines what items will be shown in the dialog.\nDepending on your use case, you will need to use the\n[](xref:Api.Js.SxcJs.CommandParamsEntityInList) or [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock) parameters as well.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 16,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandContentTypeParams.contentType",
								"id": 26
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								16
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 90,
							"character": 49
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandAddParams",
							"id": 17
						}
					]
				},
				{
					"id": 17,
					"name": "CommandAddParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `add`.\n<br>\nThe `contentType` determines what items will be created, the `index` where.\nDepending on your use case, you will need to use the\n[](xref:Api.Js.SxcJs.CommandParamsEntityInList) or [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock) parameters as well.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 18,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandContentTypeParams.contentType",
								"id": 26
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								18
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 103,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandContentTypeParams",
							"id": 25
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 19,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "index-public-part.ts",
										"line": 103,
										"character": 75
									}
								]
							}
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 20,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "index-public-part.ts",
										"line": 103,
										"character": 117
									}
								]
							}
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 21,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "index-public-part.ts",
										"line": 103,
										"character": 168
									}
								]
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CommandAddExistingParams",
							"id": 15
						}
					]
				},
				{
					"id": 22,
					"name": "CommandContentItemsParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `contentitems`.\n<br>\nThe content-type name determines what items will be managed.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 24,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandContentTypeParams.contentType",
								"id": 26
							}
						},
						{
							"id": 23,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Filters to apply to the list of items.\n<br>\nEach property targets a field.\nThe value is a string, number or array for filtering EntityIds or EntityGuids"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 125,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								24,
								23
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 118,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandContentTypeParams",
							"id": 25
						}
					]
				},
				{
					"id": 25,
					"name": "CommandContentTypeParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `contenttype`.\n<br>\nThe content-type name determines what items will be loaded to manage the fields.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 26,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								26
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 136,
							"character": 49
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CommandAddParams",
							"id": 17
						},
						{
							"type": "reference",
							"name": "CommandContentItemsParams",
							"id": 22
						},
						{
							"type": "reference",
							"name": "CommandCopyParams",
							"id": 27
						},
						{
							"type": "reference",
							"name": "CommandMetadataParams",
							"id": 37
						},
						{
							"type": "reference",
							"name": "CommandNewParams",
							"id": 70
						}
					]
				},
				{
					"id": 27,
					"name": "CommandCopyParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `copy`.\nWill copy the entity on `entityId`.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 28,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandContentTypeParams.contentType",
								"id": 26
							}
						},
						{
							"id": 29,
							"name": "entityId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "ID of item to edit."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 518,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityById.entityId",
								"id": 85
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								28,
								29
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 150,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandContentTypeParams",
							"id": 25
						},
						{
							"type": "reference",
							"name": "CommandParamsEntityById",
							"id": 84
						}
					]
				},
				{
					"id": 30,
					"name": "CommandCustomParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `custom` on toolbars.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 31,
							"name": "call",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Name of the function to call - must be available in the context.\nThis is usually as a function window. Example:\n<br>\nIf `call` is `sayHello` you need a `window.sayHello(context, event)`."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 166,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "customCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "**OBSOLETE - avoid using**\n<br>\nJavaScript as string containing the code to execute.\nThis is the old V9 - it contains a function, not a name",
								"tags": [
									{
										"tag": "obsolete",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 174,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								31,
								32
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 159,
							"character": 44
						}
					]
				},
				{
					"id": 33,
					"name": "CommandDeleteParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `delete`.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 35,
							"name": "entityGuid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Guid of item to delete, usually detected from context."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 191,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34,
							"name": "entityId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "ID of item to delete, usually detected from context."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 187,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36,
							"name": "entityTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Title of item to delete, usually detected from context.\nThis is important to show the \"Are you sure?\" dialog."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 196,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								35,
								34,
								36
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 183,
							"character": 44
						}
					]
				},
				{
					"id": 37,
					"name": "CommandMetadataParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `metadata`.\n<br>\nWill do either one of these:\n- if it has an `entityId`, will just open `edit` for that Entity\n- if it has no `entityId`, will open `new` for the current `contentType`\nand assign to the target specified by `metadata`:\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 39,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandContentTypeParams.contentType",
								"id": 26
							}
						},
						{
							"id": 40,
							"name": "entityId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "ID of item to edit."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 518,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityById.entityId",
								"id": 85
							}
						},
						{
							"id": 38,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Target to assign the metadata to."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 216,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "CommandParamsMetadata",
								"id": 93
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								39,
								40,
								38
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 212,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandContentTypeParams",
							"id": 25
						},
						{
							"type": "reference",
							"name": "CommandParamsEntityById",
							"id": 84
						}
					]
				},
				{
					"id": 70,
					"name": "CommandNewParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for the command `new`\n<br>\nThe ContentType name determines what kind of item will be created.\n<br>\nCan also contain `prefill` to add values to the new item.\n<br>\nCan also contain list-information, in which case it's added to that list.\nDepending on your use case, you will need to use the\n[](xref:Api.Js.SxcJs.CommandParamsEntityInList) or [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock) parameters as well.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 72,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The content-type name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 140,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandContentTypeParams.contentType",
								"id": 26
							}
						},
						{
							"id": 71,
							"name": "prefill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional values to prefill in the new-form"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 458,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								72,
								71
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 454,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandContentTypeParams",
							"id": 25
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 73,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "index-public-part.ts",
										"line": 454,
										"character": 75
									}
								]
							}
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 74,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "index-public-part.ts",
										"line": 454,
										"character": 111
									}
								]
							}
						}
					]
				},
				{
					"id": 75,
					"name": "CommandParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Command parameters are handed over to a command for execution"
					},
					"children": [
						{
							"id": 76,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The action is used in scenarios where the command name must be included"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 469,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "CommandNames",
								"id": 41
							}
						},
						{
							"id": 77,
							"name": "isshared",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "for template edit dialog",
								"tags": [
									{
										"tag": "intenal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 496,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								76,
								77
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 465,
							"character": 38
						}
					]
				},
				{
					"id": 78,
					"name": "CommandParamsEntity",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for commands which need an entity ID or a list-reference.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 79,
							"name": "entityId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "ID of item to edit."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 518,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityById.entityId",
								"id": 85
							}
						},
						{
							"id": 82,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parent Entity field(s) name(s).\nUsually just one field, like `Authors`.\nIn field-sets it could be `Author,Award` or similar."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 554,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityInList.fields",
								"id": 91
							}
						},
						{
							"id": 80,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determins the position of the item in the list."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 531,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "CommandParamsEntityInList.index",
								"id": 90
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityInContentBlock.index",
								"id": 87
							}
						},
						{
							"id": 83,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parent entity _GUID_ which has the field referencing this item."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 558,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityInList.parent",
								"id": 92
							}
						},
						{
							"id": 81,
							"name": "useModuleList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Must be true, to work on the module list."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 535,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CommandParamsEntityInContentBlock.useModuleList",
								"id": 88
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								79,
								82,
								80,
								83,
								81
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 505,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CommandParamsEntityById",
							"id": 84
						},
						{
							"type": "reference",
							"name": "CommandParamsEntityInContentBlock",
							"id": 86
						},
						{
							"type": "reference",
							"name": "CommandParamsEntityInList",
							"id": 89
						}
					]
				},
				{
					"id": 84,
					"name": "CommandParamsEntityById",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for commands which address a specificy entity.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 85,
							"name": "entityId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "ID of item to edit."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 518,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								85
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 514,
							"character": 48
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CommandCopyParams",
							"id": 27
						},
						{
							"type": "reference",
							"name": "CommandMetadataParams",
							"id": 37
						},
						{
							"type": "reference",
							"name": "CommandParamsEntity",
							"id": 78
						}
					]
				},
				{
					"id": 86,
					"name": "CommandParamsEntityInContentBlock",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for command which expect an item from a list of a ContentBlock.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 87,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determins the position of the item in the list."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 531,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 88,
							"name": "useModuleList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Must be true, to work on the module list."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 535,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								87,
								88
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 527,
							"character": 58
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CommandParamsEntity",
							"id": 78
						}
					]
				},
				{
					"id": 89,
					"name": "CommandParamsEntityInList",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters used for command which expect an item in a list (field) of a parent.\n<br>\n⤴️ back to [All Command Names](xref:Api.Js.SxcJs.CommandNames)"
					},
					"children": [
						{
							"id": 91,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parent Entity field(s) name(s).\nUsually just one field, like `Authors`.\nIn field-sets it could be `Author,Award` or similar."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 554,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 90,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determins the position of the item in the list of that entity-field."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 548,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 92,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Parent entity _GUID_ which has the field referencing this item."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 558,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								91,
								90,
								92
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 544,
							"character": 50
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CommandParamsEntity",
							"id": 78
						}
					]
				},
				{
					"id": 93,
					"name": "CommandParamsMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters on `metadata` for commands which have a metadata-target."
					},
					"children": [
						{
							"id": 94,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The key which identifies the target of this metadata item"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 569,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 95,
							"name": "keyType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the key type, will default to 'string'"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 573,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 96,
							"name": "targetType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The target type, will default to 10 = CMS-Item"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 577,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "MetadataTargetTypes",
								"id": 150
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								94,
								95,
								96
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 565,
							"character": 46
						}
					]
				},
				{
					"id": 117,
					"name": "EnvironmentSpecs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A context information for the current page, helping the JS talk with the backend"
					},
					"children": [
						{
							"id": 119,
							"name": "api",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Optional API key - optional if set from external, because it's auto derived from root"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 707,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 120,
							"name": "appApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Optional App API Root - required because in Oqtane we'll have a different root for appAPIs"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 709,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 118,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Page ID"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 705,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 124,
							"name": "platform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The platform code like 'dnn' or 'oqt'"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 718,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 121,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Portal root path - used for various things incl. the API root"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 711,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 123,
							"name": "rvt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Request verification token value"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 715,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 122,
							"name": "rvtHeader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Request verification token header name"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 713,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								119,
								120,
								118,
								124,
								121,
								123,
								122
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 703,
							"character": 41
						}
					]
				},
				{
					"id": 145,
					"name": "MetadataFor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A Metadata-Target identifier to tell an entity that it describes something else.",
						"text": "Usually used in Sxc instances with the [Data Service](xref:Api.Js.SxcJs.SxcData)\n\nWarning: There is another MetadataFor type and they are not fully consistent.\nThis is historical and not easy to correct, but we're working on it."
					},
					"children": [
						{
							"id": 149,
							"name": "Guid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The GUID of the target, if it's identified by a GUID.",
								"tags": [
									{
										"tag": "type",
										"text": "{string}"
									},
									{
										"tag": "memberof",
										"text": "MetadataFor\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 895,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 147,
							"name": "Number",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of the target, if it's identified by a number.",
								"tags": [
									{
										"tag": "type",
										"text": "{number}"
									},
									{
										"tag": "memberof",
										"text": "MetadataFor\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 883,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 148,
							"name": "String",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The string-id of the target, if it's identified by a string.",
								"tags": [
									{
										"tag": "type",
										"text": "{string}"
									},
									{
										"tag": "memberof",
										"text": "MetadataFor\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 889,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 146,
							"name": "Target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The target type identifier\n- TODO: @2dm - THIS SHOULD probably be number only"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 877,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "MetadataTargetTypes",
										"id": 150
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								149,
								147,
								148,
								146
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 872,
							"character": 36
						}
					]
				},
				{
					"id": 192,
					"name": "RunParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters for the Instance sxc.cms.run(...) command.\nNew in 13.03"
					},
					"children": [
						{
							"id": 193,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The action to perform.\nRequired."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1141,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "CommandNames",
								"id": 41
							}
						},
						{
							"id": 194,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event which triggered this command - sometimes useful internally further use.\nOptional in most cases, but in some cases it will improve the behavior of the code."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1147,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "MouseEvent"
							}
						},
						{
							"id": 195,
							"name": "workflows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Workflows work the same way as with a toolbar, except that they are added here and not registered on init.\nBecause of limitations in automatic documentation, the type here is set to `unknown` but it's actually `WorkflowStep` | `WorkflowStep[]`"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1152,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								193,
								194,
								195
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1136,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "RunParamsWithContext",
							"id": 196
						}
					]
				},
				{
					"id": 196,
					"name": "RunParamsWithContext",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Parameters for the **Global** $2sxc.cms.run(...) command in Addition to the [RunParams](xref:Api.Js.SxcJs.RunParams).\nIt provides context to the run-params such as a Sxc instance or a tag which it started on.\nNew in 12.10"
					},
					"children": [
						{
							"id": 199,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The action to perform.\nRequired."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1141,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "CommandNames",
								"id": 41
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RunParams.action",
								"id": 193
							}
						},
						{
							"id": 198,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The context to run in, basically containing module id, etc.\nWe always need the tag OR the context, but never both"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1173,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Sxc",
										"id": 202
									},
									{
										"type": "reference",
										"name": "ContextIdentifier",
										"id": 112
									}
								]
							}
						},
						{
							"id": 200,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event which triggered this command - sometimes useful internally further use.\nOptional in most cases, but in some cases it will improve the behavior of the code."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1147,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "MouseEvent"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RunParams.event",
								"id": 194
							}
						},
						{
							"id": 197,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The tag on which the run was triggered - it's used to give the command a context to start from\nWe always need the tag OR the context, but never both"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1168,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 201,
							"name": "workflows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Workflows work the same way as with a toolbar, except that they are added here and not registered on init.\nBecause of limitations in automatic documentation, the type here is set to `unknown` but it's actually `WorkflowStep` | `WorkflowStep[]`"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1152,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RunParams.workflows",
								"id": 195
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								199,
								198,
								200,
								197,
								201
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1163,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "RunParams",
							"id": 192
						}
					]
				},
				{
					"id": 246,
					"name": "SxcGlobal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "This is the root global `window.$2sxc` function / object.",
						"text": "It is both a function `window.$2sxc(...)` and object `window.$2sxc.insights...`\n\nIf the page feature `2sxc.JsCms` is enabled, the `window.$2sxc` will also be a [SxcGlobalWithCms](xref:Api.Js.SxcJs.SxcGlobalWithCms)"
					},
					"signatures": [
						{
							"id": 247,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get an Sxc Instance",
								"text": "It is both a function `window.$2sxc(...)` and object `window.$2sxc.insights...`\n\nIf the page feature `2sxc.JsCms` is enabled, the `window.$2sxc` will also be a [SxcGlobalWithCms](xref:Api.Js.SxcJs.SxcGlobalWithCms)",
								"returns": "SxcInstance\n"
							},
							"parameters": [
								{
									"id": 248,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "number: moduleId | HTMLElement: tag in the page | Sxc: an existing sxc - will just be returned | ContextIdentifier: an identifier in complex scenarios without a moduleId/context"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "HTMLElement"
											},
											{
												"type": "reference",
												"name": "ContextIdentifier",
												"id": 112
											},
											{
												"type": "reference",
												"name": "Sxc",
												"id": 202
											}
										]
									}
								},
								{
									"id": 249,
									"name": "cbid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sxc",
								"id": 202
							}
						}
					],
					"children": [
						{
							"id": 266,
							"name": "env",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Environment information",
								"tags": [
									{
										"tag": "type",
										"text": "{SxcGlobalEnvironment}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1389,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "SxcGlobalEnvironment",
								"id": 296
							}
						},
						{
							"id": 267,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Http helper for API calls and such"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1393,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SxcGlobalHttp",
								"id": 313
							}
						},
						{
							"id": 262,
							"name": "sysinfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "system information, mainly for checking which version of 2sxc is running\nnote: it's not always updated reliably, but it helps when debugging"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1379,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 263,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 265,
											"name": "description",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "a short text description, for people who have no idea what this is"
											},
											"sources": [
												{
													"fileName": "index-public-part.ts",
													"line": 1383,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 264,
											"name": "version",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "the version using the ##.##.## syntax"
											},
											"sources": [
												{
													"fileName": "index-public-part.ts",
													"line": 1381,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												265,
												264
											]
										}
									],
									"sources": [
										{
											"fileName": "index-public-part.ts",
											"line": 1379,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 274,
							"name": "urlParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Helper to work with url parameters behind ? or #",
								"tags": [
									{
										"tag": "type",
										"text": "{UrlParams}"
									},
									{
										"tag": "memberof",
										"text": "SxcRoot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1410,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "UrlParams",
								"id": 434
							}
						},
						{
							"id": 250,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 251,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get an Sxc Instance using the moduleId.\nUsing `$2sxc.get(...)` is the same as using `$2sxc(...)`",
										"returns": "SxcInstance",
										"tags": [
											{
												"tag": "since",
												"text": "v14.01\n"
											}
										]
									},
									"parameters": [
										{
											"id": 252,
											"name": "moduleId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "number: moduleId"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Sxc",
										"id": 202
									}
								},
								{
									"id": 253,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get an Sxc Instance using the moduleId and contentBlockId.\nUsing `$2sxc.get(...)` is the same as using `$2sxc(...)`",
										"returns": "Sxc",
										"tags": [
											{
												"tag": "since",
												"text": "v14.01\n"
											}
										]
									},
									"parameters": [
										{
											"id": 254,
											"name": "moduleId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "number: moduleId"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 255,
											"name": "contentBlockId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "number: content-block ID"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Sxc",
										"id": 202
									}
								},
								{
									"id": 256,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get an Sxc Instance using a tag / `HtmlElement`. Using `$2sxc.get(...)` is the same as using `$2sxc(...)`",
										"returns": "Sxc",
										"tags": [
											{
												"tag": "since",
												"text": "v14.01\n"
											}
										]
									},
									"parameters": [
										{
											"id": 257,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "HTMLElement: tag in the page"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Sxc",
										"id": 202
									}
								},
								{
									"id": 258,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get an Sxc Instance using a full context-identifier (advanced). Using `$2sxc.get(...)` is the same as using `$2sxc(...)`",
										"returns": "Sxc",
										"tags": [
											{
												"tag": "since",
												"text": "v14.01\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ContextIdentifier: full context identifier"
											},
											"type": {
												"type": "reference",
												"name": "ContextIdentifier",
												"id": 112
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Sxc",
										"id": 202
									}
								},
								{
									"id": 260,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get an Sxc Instance passing in an existing Sxc - just for cases where you're not sure what you aready have. Using `$2sxc.get(...)` is the same as using `$2sxc(...)`",
										"returns": "Sxc - the same Sxc as the one which was passed in",
										"tags": [
											{
												"tag": "since",
												"text": "v14.01\n"
											}
										]
									},
									"parameters": [
										{
											"id": 261,
											"name": "sxc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Sxc: an existing sxc - will just be returned"
											},
											"type": {
												"type": "reference",
												"name": "Sxc",
												"id": 202
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Sxc",
										"id": 202
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1338,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1347,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1354,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1361,
									"character": 7
								},
								{
									"fileName": "index-public-part.ts",
									"line": 1368,
									"character": 7
								}
							]
						},
						{
							"id": 268,
							"name": "insights",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 269,
									"name": "insights",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The debugging / insights system.\nCall the `$2sxc.insights()` without parameters to get instructions what the parameters could be."
									},
									"parameters": [
										{
											"id": 270,
											"name": "partName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional name of a part of the system for which we want to see the logs"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 271,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional index on that part for which log we want to see"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 272,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "log start index - this is to skip the first few lines if there are too many"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 273,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "amount of lines to show - in some cases will default to 25\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1402,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								266,
								267,
								262,
								274
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								250,
								268
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1323,
							"character": 34
						}
					]
				},
				{
					"id": 331,
					"name": "SxcGlobalWithCms",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "$2sxc global interface _extending_ the `SxcGlobal` when the page feature `JsCms` is enabled.",
						"text": "If the page feature `2sxc.JsCms` is not enabled, the `window.$2sxc` will be a [SxcGlobal](xref:Api.Js.SxcJs.SxcGlobal)"
					},
					"children": [
						{
							"id": 335,
							"name": "cms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Content Management features on the $2sxc"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1587,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "SxcGlobalCms",
								"id": 275
							}
						},
						{
							"id": 332,
							"name": "translate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "translate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Will retrieve a resource in the current language.\nMainly used for toolbars etc. to support localization.",
										"text": "Only available when edit mode is on meaning the page feature JsCms is enabled"
									},
									"parameters": [
										{
											"id": 334,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the key of the resource to translate\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1582,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								335
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								332
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1573,
							"character": 41
						}
					]
				},
				{
					"id": 429,
					"name": "UrlItemParams",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 432,
							"name": "contentTypeName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1820,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 433,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1821,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 431,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1819,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 430,
							"name": "prefill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1818,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TypeValue",
										"id": 514
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								432,
								433,
								431,
								430
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1817,
							"character": 31
						}
					]
				},
				{
					"id": 447,
					"name": "WorkflowStep",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A workflow step (code-sequence) to run before/after specific events."
					},
					"children": [
						{
							"id": 452,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The code which is run, must be a promise-factory.\nSo it's a function that will return a promise.\nRequired.\nSee [](xref:Api.Js.SxcJs.WorkflowStepCode)"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1908,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 453,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 454,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 455,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "WorkflowStepCodeArguments",
														"id": 456
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "WorkflowStepCodeArguments",
												"id": 456
											}
										}
									],
									"sources": [
										{
											"fileName": "index-public-part.ts",
											"line": 1908,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 449,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The action this step is for, can be 'any', 'edit', etc.\nWill be 'all' by default"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1891,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 448,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of this step, in case it needs to be replaced or somehow controlled\nWill be empty by default"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1886,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 450,
							"name": "phase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Action-phase being run, like 'all', 'before', 'after'\nwill be 'before' by default"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1896,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "WorkflowPhases",
								"id": 443
							}
						},
						{
							"id": 451,
							"name": "priority",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Execution priority, higher comes first\nWill be 1 by default."
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1901,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								452,
								449,
								448,
								450,
								451
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1881,
							"character": 37
						}
					]
				},
				{
					"id": 462,
					"name": "ZzzAjaxSettingsDeprecated",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Deprecated parameters for old jQuery AJAX calls.\nShouldn't be used any more.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 464,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "action name, for controller/action calls"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1963,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 463,
							"name": "controller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Controller name, for controller/action calls"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1959,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 465,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The params to be used in the url for the request"
							},
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1967,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								464,
								463,
								465
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1954,
							"character": 50
						}
					]
				},
				{
					"id": 466,
					"name": "ZzzSxcWebApiDeprecated",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "**Deprecated**\nOld APIs on sxc.webApi.\nThey only exist if jQuery is included on the page, and we highly discourage their use.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 479,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 480,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated**\nPlease use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson)\nor [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.",
										"text": "Returns an http-delete promise using jQuery",
										"returns": "jQuery ajax promise object",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 481,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the url to talk to"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 482,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style ajax parameters"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 483,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style data for post/put requests"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 484,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 2019,
									"character": 10
								}
							]
						},
						{
							"id": 467,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 468,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated**\nPlease use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson)\nor [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.",
										"text": "Returns an http-get promise using jQuery",
										"returns": "jQuery ajax promise object",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 469,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the url to get"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 470,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style ajax parameters"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 471,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style data for post/put requests"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 472,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 1991,
									"character": 7
								}
							]
						},
						{
							"id": 473,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 474,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated**\nPlease use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson)\nor [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.",
										"text": "Returns an http-post promise using jQuery",
										"returns": "jQuery ajax promise object",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 475,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the url to get"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 476,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style ajax parameters"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 477,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style data for post/put requests"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 478,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 2005,
									"character": 8
								}
							]
						},
						{
							"id": 485,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 486,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated**\nPlease use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson)\nor [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.",
										"text": "Returns an http-put promise using jQuery",
										"returns": "jQuery ajax promise object",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 487,
											"name": "settingsOrUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the url to put"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 488,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style ajax parameters"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 489,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "jQuery style data for post/put requests"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 490,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 2033,
									"character": 7
								}
							]
						},
						{
							"id": 491,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 492,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "**Deprecated**\nPlease use [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchJson)\nor [fetchJson()](xref:Api.Js.SxcJs.SxcWebApi.fetchRaw) instead.",
										"text": "Generic http request using jQuery",
										"returns": "jQuery ajax promise object",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use fetchJson instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 493,
											"name": "settings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ZzzAjaxSettingsDeprecated",
														"id": 462
													}
												]
											}
										},
										{
											"id": 494,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "jQuery style ajax parameters"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 495,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "jQuery style data for post/put requests"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 496,
											"name": "preventAutoFail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 497,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the http verb name"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 2048,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								479,
								467,
								473,
								485,
								491
							]
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1977,
							"character": 47
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "SxcWebApi",
							"id": 375
						}
					]
				},
				{
					"id": 498,
					"name": "ButtonGenOrProp",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"typeParameter": [
						{
							"id": 499,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 45,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ButtonPropGen",
								"id": 500,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							{
								"type": "typeParameter",
								"name": "T"
							}
						]
					}
				},
				{
					"id": 500,
					"name": "ButtonPropGen",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "This is the most common call signature on most ButtonConfig properties"
					},
					"typeParameter": [
						{
							"id": 501,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 59,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 502,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 503,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 504,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContextComplete",
												"id": 106
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"sources": [
								{
									"fileName": "index-public-part.ts",
									"line": 59,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 505,
					"name": "CommandPromise",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"typeParameter": [
						{
							"id": 506,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 580,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						]
					}
				},
				{
					"id": 507,
					"name": "LogList",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPublic": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 858,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Array",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 508,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 509,
											"name": "key",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "index-public-part.ts",
													"line": 859,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 510,
											"name": "log",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "index-public-part.ts",
													"line": 860,
													"character": 7
												}
											],
											"type": {
												"type": "reference",
												"name": "Log",
												"id": 132
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												509,
												510
											]
										}
									],
									"sources": [
										{
											"fileName": "index-public-part.ts",
											"line": 858,
											"character": 29
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 512,
					"name": "TypeAutoAddMore",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1803,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "stringLiteral",
								"value": "start"
							},
							{
								"type": "stringLiteral",
								"value": "end"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 513,
					"name": "TypeHover",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1807,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "left"
							},
							{
								"type": "stringLiteral",
								"value": "right"
							},
							{
								"type": "stringLiteral",
								"value": "none"
							}
						]
					}
				},
				{
					"id": 514,
					"name": "TypeValue",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1813,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"name": "Date"
							}
						]
					}
				},
				{
					"id": 511,
					"name": "QuickEditConfigEnableAuto",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "index-public-part.ts",
							"line": 1100,
							"character": 46
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						41,
						150,
						443
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						97,
						100,
						103,
						106,
						112,
						125,
						126,
						132,
						142,
						177,
						180,
						187,
						202,
						216,
						221,
						244,
						275,
						296,
						313,
						336,
						337,
						375,
						425,
						434,
						456
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2,
						15,
						17,
						22,
						25,
						27,
						30,
						33,
						37,
						70,
						75,
						78,
						84,
						86,
						89,
						93,
						117,
						145,
						192,
						196,
						246,
						331,
						429,
						447,
						462,
						466
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						498,
						500,
						505,
						507,
						512,
						513,
						514
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						511
					]
				}
			],
			"sources": [
				{
					"fileName": "index-public-part.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				515,
				1
			]
		}
	]
}