### YamlMime:UniversalReference
items:
  - uid: Api.Js.InPage.SxcWebApi
    name: SxcWebApi
    fullName: SxcWebApi
    children:
      - Api.Js.InPage.SxcWebApi.delete
      - Api.Js.InPage.SxcWebApi.fetchJson
      - Api.Js.InPage.SxcWebApi.fetchRaw
      - Api.Js.InPage.SxcWebApi.get
      - Api.Js.InPage.SxcWebApi.headers
      - Api.Js.InPage.SxcWebApi.post
      - Api.Js.InPage.SxcWebApi.put
      - Api.Js.InPage.SxcWebApi.request
      - Api.Js.InPage.SxcWebApi.url
    langs:
      - typeScript
    type: class
    summary: |-
      helper API to run ajax / REST calls to the server
      it will ensure that the headers etc. are set correctly
      and that urls are rewritten
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcWebApi.delete
    name: 'delete(string | AjaxSettings, any, any, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      **Deprecated**
      Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson)
      or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.
      Returns an http-delete promise using jQuery
    syntax:
      content: >-
        function delete(settingsOrUrl: string | AjaxSettings, params?: any,
        data?: any, preventAutoFail?: boolean)
      parameters:
        - id: settingsOrUrl
          type:
            - string | AjaxSettings
          description: the url to talk to
        - id: params
          type:
            - any
          description: jQuery style ajax parameters
          optional: true
        - id: data
          type:
            - any
          description: jQuery style data for post/put requests
          optional: true
        - id: preventAutoFail
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - JQueryPromise<any>
        description: jQuery ajax promise object
    package: Api.Js.InPage
    deprecated:
      content: use fetchJson instead
  - uid: Api.Js.InPage.SxcWebApi.fetchJson
    name: 'fetchJson(string, string | Record<string, any>, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Will retrieve data from the backend using a standard fetch and give you an
      object.
    syntax:
      content: >-
        function fetchJson<T>(url: string, data?: string | Record<string, any>,
        method?: string)
      parameters:
        - id: url
          type:
            - string
          description: >-
            a full url or short-hand like `controller/method?params`
            `app/auto/api/controller/method?params`. Note that params would also
            be specified on the url.
        - id: data
          type:
            - 'string | Record<string, any>'
          description: optional POST data
          optional: true
        - id: method
          type:
            - string
          description: >-
            optional method, defaults to `GET` unless it has data, in which case
            it defaults to `POST`
          optional: true
      return:
        type:
          - Promise<T>
        description: a Promise containing any object.
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcWebApi.fetchRaw
    name: 'fetchRaw(string, string | Record<string, any>, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Will retrieve data from the backend using a standard fetch.
    syntax:
      content: >-
        function fetchRaw(url: string, data?: string | Record<string, any>,
        method?: string)
      parameters:
        - id: url
          type:
            - string
          description: >-
            a full url or short-hand like `controller/method?params`
            `app/auto/api/controller/method?params`. Note that params would also
            be specified on the url.
        - id: data
          type:
            - 'string | Record<string, any>'
          description: optional POST data
          optional: true
        - id: method
          type:
            - string
          description: >-
            optional method, defaults to `GET` unless it has data, in which case
            it defaults to `POST`
          optional: true
      return:
        type:
          - Promise<Response>
        description: >-
          a Promise containing a Response object, just like a normal fetch
          would.

          example: webApi.fetchRaw('Rss/Feed');

          example: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 })); // url
          params

          example: webApi.fetchRaw('Rss/Feed', { id: 47 }); // post params

          example: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 }), {
          something: 'this is a test' }); // url & post params

          maybe: webApi.fetchRaw({url: 'Rss/Feed', params: { id: 47 }})

          maybe: webApi.fetchRaw({url: ..., params: { ...}, body: { ...},
          method: 'GET' })
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcWebApi.get
    name: 'get(string | AjaxSettings, any, any, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      **Deprecated**
      Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson)
      or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.
      Returns an http-get promise using jQuery
    syntax:
      content: >-
        function get(settingsOrUrl: string | AjaxSettings, params?: any, data?:
        any, preventAutoFail?: boolean)
      parameters:
        - id: settingsOrUrl
          type:
            - string | AjaxSettings
          description: the url to get
        - id: params
          type:
            - any
          description: jQuery style ajax parameters
          optional: true
        - id: data
          type:
            - any
          description: jQuery style data for post/put requests
          optional: true
        - id: preventAutoFail
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - JQueryPromise<any>
        description: jQuery ajax promise object
    package: Api.Js.InPage
    deprecated:
      content: use fetchJson instead
  - uid: Api.Js.InPage.SxcWebApi.headers
    name: headers(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      All the headers which are needed in an ajax call for this to work
      reliably.

      Use this if you need to get a list of headers in another system
    syntax:
      content: 'function headers(method?: string)'
      parameters:
        - id: method
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - 'Record<string, string>'
        description: ''
    package: Api.Js.InPage
  - uid: Api.Js.InPage.SxcWebApi.post
    name: 'post(string | AjaxSettings, any, any, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      **Deprecated**
      Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson)
      or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.
      Returns an http-post promise using jQuery
    syntax:
      content: >-
        function post(settingsOrUrl: string | AjaxSettings, params?: any, data?:
        any, preventAutoFail?: boolean)
      parameters:
        - id: settingsOrUrl
          type:
            - string | AjaxSettings
          description: the url to get
        - id: params
          type:
            - any
          description: jQuery style ajax parameters
          optional: true
        - id: data
          type:
            - any
          description: jQuery style data for post/put requests
          optional: true
        - id: preventAutoFail
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - JQueryPromise<any>
        description: jQuery ajax promise object
    package: Api.Js.InPage
    deprecated:
      content: use fetchJson instead
  - uid: Api.Js.InPage.SxcWebApi.put
    name: 'put(string | AjaxSettings, any, any, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      **Deprecated**
      Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson)
      or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.
      Returns an http-put promise using jQuery
    syntax:
      content: >-
        function put(settingsOrUrl: string | AjaxSettings, params?: any, data?:
        any, preventAutoFail?: boolean)
      parameters:
        - id: settingsOrUrl
          type:
            - string | AjaxSettings
          description: the url to put
        - id: params
          type:
            - any
          description: jQuery style ajax parameters
          optional: true
        - id: data
          type:
            - any
          description: jQuery style data for post/put requests
          optional: true
        - id: preventAutoFail
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - JQueryPromise<any>
        description: jQuery ajax promise object
    package: Api.Js.InPage
    deprecated:
      content: use fetchJson instead
  - uid: Api.Js.InPage.SxcWebApi.request
    name: 'request(string | AjaxSettings, any, any, boolean, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      **Deprecated**
      Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson)
      or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.
      Generic http request using jQuery
    syntax:
      content: >-
        function request(settings: string | AjaxSettings, params: any, data:
        any, preventAutoFail: boolean, method: string)
      parameters:
        - id: settings
          type:
            - string | AjaxSettings
          description: ''
        - id: params
          type:
            - any
          description: jQuery style ajax parameters
        - id: data
          type:
            - any
          description: jQuery style data for post/put requests
        - id: preventAutoFail
          type:
            - boolean
          description: ''
        - id: method
          type:
            - string
          description: the http verb name
      return:
        type:
          - JQueryPromise<any>
        description: jQuery ajax promise object
    package: Api.Js.InPage
    deprecated:
      content: use fetchJson instead
  - uid: Api.Js.InPage.SxcWebApi.url
    name: 'url(string, string | Record<string, any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function url(url: string, params?: string | Record<string, any>)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A short, medium or long url.
            Short like `controller/method`,
            medium like `app/auto/api/controller/method`
            long like `https://xyz.
            In all cases it can also have ?params etc.
        - id: params
          type:
            - 'string | Record<string, any>'
          description: >-
            Optional parameters as string or object, will be added to
            url-params.
          optional: true
      return:
        type:
          - string
        description: |-
          In the cases of a short/medium url,
          it will auto-expand to have the full url as needed for an API call.
    package: Api.Js.InPage
