### YamlMime:UniversalReference
items:
  - uid: Api.Js.SxcJs.SxcData
    name: SxcData
    fullName: SxcData<T>
    children:
      - Api.Js.SxcJs.SxcData.getAll
      - Api.Js.SxcJs.SxcData.getOne
      - Api.Js.SxcJs.SxcData.name
      - Api.Js.SxcJs.SxcData.partName
      - Api.Js.SxcJs.SxcData.sxc
      - Api.Js.SxcJs.SxcData.update
    langs:
      - typeScript
    type: class
    summary: >-
      Data Service for an App / Sxc-Instance to get/create data of a specific
      Content-Type
    extends:
      name: SxcDataServiceBase
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcData.getAll
    name: getAll()
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all items of this type.
    syntax:
      content: function getAll()
      parameters: []
      return:
        type:
          - 'Promise<T[]>'
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcData.getOne
    name: getOne(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the specific item with the ID. It will return null if not found
    syntax:
      content: 'function getOne(id: number)'
      parameters:
        - id: id
          type:
            - number
          description: ''
      return:
        type:
          - Promise<T> | null
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcData.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: the content-type name
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcData.partName
    name: partName
    fullName: partName
    children: []
    langs:
      - typeScript
    type: property
    summary: name of the part
    syntax:
      content: 'public partName: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcData.sxc
    name: sxc
    fullName: sxc
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public sxc: Sxc'
      return:
        type:
          - Api.Js.SxcJs.Sxc
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcData.update
    name: 'update(number, Record<string, unknown>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an existing entity with the values supplied
    syntax:
      content: 'function update(id: number, values: Record<string, unknown>)'
      parameters:
        - id: id
          type:
            - number
          description: ''
        - id: values
          type:
            - 'Record<string, unknown>'
          description: ''
      return:
        type:
          - 'Promise<Record<string, unknown>>'
        description: ''
    package: Api.Js.SxcJs
references:
  - uid: Api.Js.SxcJs.Sxc
    name: Sxc
    spec.typeScript:
      - name: Sxc
        fullName: Sxc
        uid: Api.Js.SxcJs.Sxc
